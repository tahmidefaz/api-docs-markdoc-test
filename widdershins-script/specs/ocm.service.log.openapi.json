{"components":{"parameters":{"cluster_uuid":{"description":"The uuid of cluster","explode":false,"in":"path","name":"cluster_uuid","required":true,"schema":{"type":"string"},"style":"simple"},"fetchAccounts":{"description":"If true, includes the account reference information in the output. Could slow request response time.","in":"query","name":"fetchAccounts","required":false,"schema":{"type":"boolean"}},"fields":{"description":"Supplies a comma-separated list of fields to be returned.\nFields of sub-structures and of arrays use \u003cstructure\u003e.\u003cfield\u003e notation.\n\u003cstucture\u003e.* means all field of a structure\nExample: For each Subscription to get id, href, plan(id and kind) and labels (all fields)\n\n```\nocm get subscriptions --parameter fields=id,href,plan.id,plan.kind,labels.* --parameter fetchLabels=true\n```","in":"query","name":"fields","required":false,"schema":{"type":"string"}},"format":{"description":"Get log records in various format types (eg. csv/json)","explode":true,"in":"query","name":"format","required":false,"schema":{"type":"string"},"style":"form"},"id":{"description":"The id of the record","explode":false,"in":"path","name":"id","required":true,"schema":{"type":"string"},"style":"simple"},"orderBy":{"description":"Specifies the order by criteria. The syntax of this parameter is\nsimilar to the syntax of the _order by_ clause of an SQL statement,\nbut using the names of the json attributes / column of the account.\nFor example, in order to retrieve all accounts ordered by username:\n\n```sql\nusername asc\n```\n\nOr in order to retrieve all accounts ordered by username _and_ first name:\n\n```sql\nusername asc, firstName asc\n```\n\nIf the parameter isn't provided, or if the value is empty, then\nno explicit ordering will be applied.","explode":true,"in":"query","name":"orderBy","required":false,"schema":{"type":"string"},"style":"form"},"page":{"description":"Page number of record list when record list exceeds specified page size","explode":true,"in":"query","name":"page","required":false,"schema":{"default":1,"format":"int32","minimum":1,"type":"integer"},"style":"form"},"search":{"description":"Specifies the search criteria. The syntax of this parameter is\nsimilar to the syntax of the _where_ clause of an SQL statement,\nusing the names of the json attributes / column names of the account. \nFor example, in order to retrieve all the accounts with a username\nstarting with `my`:\n\n```sql\nusername like 'my%'\n```\n\nThe search criteria can also be applied on related resource.\nFor example, in order to retrieve all the subscriptions labeled by `foo=bar`,\n\n```sql\nsubscription_labels.key = 'foo' and subscription_labels.value = 'bar'\n```\n\nIf the parameter isn't provided, or if the value is empty, then\nall the accounts that the user has permission to see will be\nreturned.","explode":true,"in":"query","name":"search","required":false,"schema":{"type":"string"},"style":"form"},"size":{"description":"Maximum number of records to return","explode":true,"in":"query","name":"size","required":false,"schema":{"default":100,"format":"int32","minimum":0,"type":"integer"},"style":"form"},"uuid":{"description":"The uuid of the record (clusterUUID)","explode":false,"in":"path","name":"uuid","required":true,"schema":{"type":"string"},"style":"simple"}},"schemas":{"ClusterLog":{"allOf":[{"$ref":"#/components/schemas/ObjectReference"},{"properties":{"cluster_id":{"type":"string"},"cluster_uuid":{"type":"string"},"created_at":{"format":"date-time","type":"string"},"created_by":{"type":"string"},"description":{"type":"string"},"email":{"type":"string"},"event_stream_id":{"type":"string"},"first_name":{"type":"string"},"internal_only":{"default":false,"type":"boolean"},"last_name":{"type":"string"},"service_name":{"type":"string"},"severity":{"enum":["Debug","Info","Warning","Error","Fatal"],"type":"string"},"subscription_id":{"type":"string"},"summary":{"type":"string"},"timestamp":{"format":"date-time","type":"string"},"username":{"type":"string"}},"type":"object"}]},"ClusterLogList":{"allOf":[{"$ref":"#/components/schemas/List"},{"properties":{"items":{"items":{"allOf":[{"$ref":"#/components/schemas/ClusterLog"}]},"type":"array"}},"type":"object"}]},"Error":{"allOf":[{"$ref":"#/components/schemas/ObjectReference"},{"properties":{"code":{"type":"string"},"operation_id":{"type":"string"},"reason":{"type":"string"}},"type":"object"}]},"ErrorList":{"allOf":[{"$ref":"#/components/schemas/List"},{"properties":{"items":{"items":{"$ref":"#/components/schemas/Error"},"type":"array"}},"type":"object"}]},"List":{"properties":{"kind":{"type":"string"},"page":{"format":"int32","type":"integer"},"size":{"format":"int32","type":"integer"},"total":{"format":"int32","type":"integer"}},"required":["items","kind","page","size","total"],"type":"object"},"ObjectReference":{"properties":{"href":{"type":"string"},"id":{"type":"string"},"kind":{"type":"string"}},"type":"object"}},"securitySchemes":{"AccessToken":{"description":"Authorization: AccessToken {cluster-uuid}:{access-token}","in":"header","name":"Authorization","type":"apiKey"},"Bearer":{"bearerFormat":"JWT","scheme":"bearer","type":"http"}}},"info":{"description":"Receives and maintains logs from internal sources related to OpenShift clusters.","title":"OCM Service Log API","version":"0.0.1"},"openapi":"3.0.0","paths":{"/api/service_logs/v1/cluster_logs":{"get":{"parameters":[{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/size"},{"$ref":"#/components/parameters/search"},{"$ref":"#/components/parameters/orderBy"},{"$ref":"#/components/parameters/fields"},{"$ref":"#/components/parameters/format"},{"$ref":"#/components/parameters/fetchAccounts"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterLogList"}}},"description":"A JSON array of Cluster Service records"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Auth token is invalid"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized to perform operation"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unexpected error occurred"}},"security":[{"Bearer":[]},{"AccessToken":[]}],"summary":"Get all service logs"},"post":{"requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterLog"}}},"description":"Log record","required":true},"responses":{"201":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterLog"}}},"description":"Log record was Created"},"400":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Validation errors occurred"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Auth token is invalid"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized to perform operation"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"An unexpected error occurred creating the log"}},"security":[{"Bearer":[]},{"AccessToken":[]}],"summary":"Create a new log record"}},"/api/service_logs/v1/cluster_logs/{id}":{"delete":{"parameters":[{"$ref":"#/components/parameters/id"}],"responses":{"204":{"description":"Log record successfully deleted"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Auth token is invalid"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized to perform operation"},"404":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"No log record with specified id exist"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"An unexpected error occurred deleting the log records"}},"security":[{"Bearer":[]},{"AccessToken":[]}],"summary":"Delete log record by record id"},"get":{"parameters":[{"$ref":"#/components/parameters/id"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterLog"}}},"description":"A JSON of the log record"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Auth token is invalid"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized to perform operation"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unexpected error occurred"}},"security":[{"Bearer":[]},{"AccessToken":[]}],"summary":"Get log by record id"}},"/api/service_logs/v1/clusters/{uuid}/cluster_logs":{"get":{"parameters":[{"$ref":"#/components/parameters/uuid"},{"$ref":"#/components/parameters/page"},{"$ref":"#/components/parameters/size"},{"$ref":"#/components/parameters/search"},{"$ref":"#/components/parameters/orderBy"},{"$ref":"#/components/parameters/fields"},{"$ref":"#/components/parameters/format"},{"$ref":"#/components/parameters/fetchAccounts"}],"responses":{"200":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/ClusterLogList"}},"text/csv":{"schema":{"type":"string"}}},"description":"A JSON array or CSV of Cluster Service records"},"401":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Auth token is invalid"},"403":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unauthorized to perform operation"},"500":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/Error"}}},"description":"Unexpected error occurred"}},"security":[{"Bearer":[]}],"summary":"Get all service logs for a specific cluster"}}},"servers":[{"description":"current domain","url":"http://localhost:8000"},{"description":"Main (production) server","url":"https://api.openshift.com"},{"description":"Staging server","url":"https://api.stage.openshift.com"}]}